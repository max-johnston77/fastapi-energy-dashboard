{"ast":null,"code":"var _jsxFileName = \"/Users/maxjohnston/Documents/Uni Work/2nd Year/VIP/energy-dashboard/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  hubName\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:8000/solar-data/${hubName}`).then(response => {\n      const formattedData = response.data.time_series.map(entry => ({\n        time: entry.time,\n        batteryCharge: entry.battery_charge,\n        demand: entry.demand_kwh,\n        solarGeneration: entry.solar_generation_kwh\n      }));\n      setData(formattedData);\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, [hubName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Energy Profile for \", hubName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\",\n          tickFormatter: tick => tick.split(\" \")[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"left\",\n          label: {\n            value: \"kWh\",\n            angle: -90,\n            position: \"insideLeft\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"right\",\n          orientation: \"right\",\n          label: {\n            value: \"Battery (%)\",\n            angle: 90,\n            position: \"insideRight\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          yAxisId: \"left\",\n          type: \"monotone\",\n          dataKey: \"demand\",\n          stroke: \"red\",\n          name: \"Demand (kWh)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          yAxisId: \"left\",\n          type: \"monotone\",\n          dataKey: \"solarGeneration\",\n          stroke: \"green\",\n          name: \"Solar Generation (kWh)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          yAxisId: \"right\",\n          type: \"monotone\",\n          dataKey: \"batteryCharge\",\n          stroke: \"blue\",\n          name: \"Battery Charge (%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","LineChart","Line","XAxis","YAxis","Tooltip","Legend","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","Dashboard","hubName","_s","data","setData","get","then","response","formattedData","time_series","map","entry","time","batteryCharge","battery_charge","demand","demand_kwh","solarGeneration","solar_generation_kwh","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","dataKey","tickFormatter","tick","split","yAxisId","label","value","angle","position","orientation","strokeDasharray","type","stroke","name","_c","$RefreshReg$"],"sources":["/Users/maxjohnston/Documents/Uni Work/2nd Year/VIP/energy-dashboard/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid, ResponsiveContainer } from \"recharts\";\n\nconst Dashboard = ({ hubName }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:8000/solar-data/${hubName}`)\n      .then((response) => {\n        const formattedData = response.data.time_series.map((entry) => ({\n          time: entry.time,\n          batteryCharge: entry.battery_charge,\n          demand: entry.demand_kwh,\n          solarGeneration: entry.solar_generation_kwh,\n        }));\n        setData(formattedData);\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, [hubName]);\n\n  return (\n    <div>\n      <h2>Energy Profile for {hubName}</h2>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <LineChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 10 }}>\n          <XAxis dataKey=\"time\" tickFormatter={(tick) => tick.split(\" \")[1]} />\n          <YAxis yAxisId=\"left\" label={{ value: \"kWh\", angle: -90, position: \"insideLeft\" }} />\n          <YAxis yAxisId=\"right\" orientation=\"right\" label={{ value: \"Battery (%)\", angle: 90, position: \"insideRight\" }} />\n          <Tooltip />\n          <Legend />\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"demand\" stroke=\"red\" name=\"Demand (kWh)\" />\n          <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"solarGeneration\" stroke=\"green\" name=\"Solar Generation (kWh)\" />\n          <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"batteryCharge\" stroke=\"blue\" name=\"Battery Charge (%)\" />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,aAAa,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9G,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACgB,GAAG,CAAC,oCAAoCJ,OAAO,EAAE,CAAC,CACrDK,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,aAAa,GAAGD,QAAQ,CAACJ,IAAI,CAACM,WAAW,CAACC,GAAG,CAAEC,KAAK,KAAM;QAC9DC,IAAI,EAAED,KAAK,CAACC,IAAI;QAChBC,aAAa,EAAEF,KAAK,CAACG,cAAc;QACnCC,MAAM,EAAEJ,KAAK,CAACK,UAAU;QACxBC,eAAe,EAAEN,KAAK,CAACO;MACzB,CAAC,CAAC,CAAC;MACHd,OAAO,CAACI,aAAa,CAAC;IACxB,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,CAACnB,OAAO,CAAC,CAAC;EAEb,oBACEF,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,GAAI,qBAAmB,EAACrB,OAAO;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrC3B,OAAA,CAACF,mBAAmB;MAAC8B,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,eAC5CvB,OAAA,CAACT,SAAS;QAACa,IAAI,EAAEA,IAAK;QAAC0B,MAAM,EAAE;UAAEC,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG,CAAE;QAAAX,QAAA,gBAC1EvB,OAAA,CAACP,KAAK;UAAC0C,OAAO,EAAC,MAAM;UAACC,aAAa,EAAGC,IAAI,IAAKA,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrE3B,OAAA,CAACN,KAAK;UAAC6C,OAAO,EAAC,MAAM;UAACC,KAAK,EAAE;YAAEC,KAAK,EAAE,KAAK;YAAEC,KAAK,EAAE,CAAC,EAAE;YAAEC,QAAQ,EAAE;UAAa;QAAE;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrF3B,OAAA,CAACN,KAAK;UAAC6C,OAAO,EAAC,OAAO;UAACK,WAAW,EAAC,OAAO;UAACJ,KAAK,EAAE;YAAEC,KAAK,EAAE,aAAa;YAAEC,KAAK,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAc;QAAE;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClH3B,OAAA,CAACL,OAAO;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACX3B,OAAA,CAACJ,MAAM;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACV3B,OAAA,CAACH,aAAa;UAACgD,eAAe,EAAC;QAAK;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvC3B,OAAA,CAACR,IAAI;UAAC+C,OAAO,EAAC,MAAM;UAACO,IAAI,EAAC,UAAU;UAACX,OAAO,EAAC,QAAQ;UAACY,MAAM,EAAC,KAAK;UAACC,IAAI,EAAC;QAAc;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzF3B,OAAA,CAACR,IAAI;UAAC+C,OAAO,EAAC,MAAM;UAACO,IAAI,EAAC,UAAU;UAACX,OAAO,EAAC,iBAAiB;UAACY,MAAM,EAAC,OAAO;UAACC,IAAI,EAAC;QAAwB;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9G3B,OAAA,CAACR,IAAI;UAAC+C,OAAO,EAAC,OAAO;UAACO,IAAI,EAAC,UAAU;UAACX,OAAO,EAAC,eAAe;UAACY,MAAM,EAAC,MAAM;UAACC,IAAI,EAAC;QAAoB;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACxB,EAAA,CAnCIF,SAAS;AAAAgD,EAAA,GAAThD,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}